{"version":3,"file":"PadSquad.min.js","mappings":"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","sources":["webpack://padsquad_snippets/webpack/runtime/chunk loaded","webpack://padsquad_snippets/./src/PSDom.js","webpack://padsquad_snippets/./src/PSToolKit.js","webpack://padsquad_snippets/webpack/bootstrap","webpack://padsquad_snippets/webpack/runtime/define property getters","webpack://padsquad_snippets/webpack/runtime/hasOwnProperty shorthand","webpack://padsquad_snippets/webpack/runtime/jsonp chunk loading","webpack://padsquad_snippets/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export const PSDom = {\n  /**\n   * Get the element full height in pixels.\n   * (including margin, padding and border)\n   *\n   * @param {HTMLElement} element\n   * @returns {number}\n   */\n  outerHeight(element) {\n    const height = element.offsetHeight;\n\n    const marginTop = parseInt(element.style?.marginTop || 0) || 0;\n    const marginBottom = parseInt(element.style?.marginBottom || 0) || 0 ;\n    return (height + marginTop + marginBottom);\n  },\n  /**\n   * This method let you draw a string of HTML in to HTMLElement\n   *\n   * @param {string} html The HTML String\n   * @param {Object<string, Function>} bindings Custom bindings to be applied to the HTML Element.\n   * @returns {HTMLElement}\n   */\n  draw(html, bindings = {}) {\n    const template = document.createElement('template');\n    template.innerHTML = String(html).replace(/(\\r\\n|\\n|\\r)(\\s{2})+/gm, '');\n    Object\n      .keys(bindings)\n      .forEach((key) => {\n        template.content.firstChild[key] = bindings[key];\n      });\n    return template.content.firstChild;\n  },\n\n  /**\n   * Find a given DOMElement base on CSS selector or throw an exception.\n   *\n   * @param {string} selector HTML Selector\n   * @returns HTMLElement\n   */\n  findOrFail(selector) {\n    const element = this.find(selector);\n    if (!element) {\n      throw new DOMException(`No elements found for ${selector}.`);\n    }\n    return element;\n  },\n  /**\n   * Find a given HTMLElement in the DOM if exists.\n   *\n   * @param {string} selector CSS selector\n   * @returns HTMLElement\n   */\n  find(selector) {\n    return document.querySelector(selector);\n  },\n  /**\n   * Wait until a given selector is present in the DOM.\n   *\n   * @param {string} selector CSS selector.\n   * @returns Promise<HTMLElement>\n   */\n  when(selector) {\n    return new Promise((resolve, reject) => {\n      try {\n        const element = PSDom.findOrFail(selector);\n        resolve(element);\n      } catch {\n        const observer = new MutationObserver(() => {\n          const element = PSDom.find(selector);\n          if (!element) {\n            return;\n          }\n          observer.disconnect();\n          resolve(element);\n        });\n\n        observer.observe(document.body, { childList: true, subtree: true });\n      }\n    });\n  },\n};\n","const PSToolKit = {\n  queryString: {\n    /**\n     * @param {string[]} keys\n     * @returns {Object<string, string>}\n     */\n    only(keys) {\n      const params = new URLSearchParams(window.top.location.search ?? '');\n      return keys.reduce((collection, current) => {\n        collection[current] = params.get(current) ?? null;\n        return collection;\n      }, {});\n    },\n  },\n  placeholder: {\n\n    /**\n     * Set the placeholders in a given string.\n     *\n     * @example\n     * // Returns: Hello World\n     * PSToolKit.placeholder.write('Hello {name}', { \"name\": \"World\" })\n     *\n     * @param {string} text The text that contains the {holders}\n     * @param {Object<string,string>} placeholders The object with the placeholders to be used.\n     * @returns {string} The string with placeholders.\n     */\n    write(text, placeholders = {}) {\n      return Object\n        .keys(placeholders)\n        .reduce((t, key) => String(t).replace(/{[\\w]+}/gmi, placeholders[key] ?? ''), text);\n    },\n\n    /**\n     * Rename the keys of a given object of strings.\n     *\n     *  @example\n     * // Result: { first: \"value_1\", second: \"value_2 \"}\n     * PSToolKit.placeholder.transform({foo: \"first\", soo: \"second\"}, { foo: \"value_1\", soo: \"value_2 \"})\n     *\n     * @param {Object<string, string>} map\n     * @param {Object<string, string>} values\n     * @returns {Object<string,string>}\n     */\n    transform(map, values) {\n      return Object\n        .keys(map)\n        .reduce((output, key) => {\n          if (values[key]) {\n            output[map[key]] = values[key];\n          }\n          return output;\n        }, {});\n    },\n\n    /**\n     * This method takes a string and build an array of all keys withing curly braces\n     *\n     * @example\n     * // Result ['firstName', 'lastName']\n     * PSToolKit.placeholder.keys('Your name is {firstName} {lastName}')\n     *\n     * @param {string} characters The string to be evaluated\n     * @returns {string[]}\n     */\n    keys(characters) {\n      return (\n        String(characters)\n          .match(/({[a-zA-Z_-]+})/g)\n          .map((key) => key.replace(/([{}])/gi, '')) ?? []\n      );\n    },\n\n    /**\n     * Get a plain {object} with only the given keys.\n     *\n     * @param {Array} keys Keys to be taken from placeholders object.\n     * @param {Object} placeholders Plain object with all placeholders.\n     * @returns {Object<string, string>}\n     */\n    only(keys, placeholders) {\n      return keys.reduce((collection, current) => {\n        if (placeholders[current]) {\n          collection[current] = placeholders[current];\n        }\n        return collection;\n      }, {});\n    },\n  },\n\n  /**\n   * This method is responsible to draw a given HTMLElement after a given element.\n   *\n   * @param {HTMLElement} existingNode The target to draw after sibling target\n   * @param {HTMLElement} nodeToAdd Target element to put as sibling element\n   * @returns {HTMLElement} The parent node with the inserted sibling element.\n   */\n  insertAfter(existingNode, nodeToAdd) {\n    return existingNode.parentNode.insertBefore(\n      nodeToAdd,\n      existingNode.nextSibling,\n    );\n  },\n};\n\nexport { PSToolKit };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t785: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpadsquad_snippets\"] = self[\"webpackChunkpadsquad_snippets\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(749);\nvar __webpack_exports__ = __webpack_require__(847);\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","PSDom","outerHeight","element","offsetHeight","parseInt","style","marginTop","marginBottom","draw","html","bindings","template","document","createElement","innerHTML","replace","Object","keys","forEach","key","content","firstChild","findOrFail","selector","this","find","DOMException","querySelector","when","Promise","resolve","c","observer","MutationObserver","disconnect","observe","body","childList","subtree","PSToolKit","queryString","only","params","URLSearchParams","window","top","location","search","reduce","collection","current","get","placeholder","write","text","placeholders","t","transform","map","values","output","characters","match","insertAfter","existingNode","nodeToAdd","parentNode","insertBefore","nextSibling","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","every","splice","r","d","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}