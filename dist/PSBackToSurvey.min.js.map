{"version":3,"file":"PSBackToSurvey.min.js","mappings":"uHAUEA,EAMMC,E,kBANND,EAwLCE,OAlLKD,EAAiB,SAAUE,GAAY,IAAD,OAC1CC,KAAKC,QAAU,CACbC,OAAQ,CAAC,EACTC,IAAK,IAWPH,KAAKI,KAAO,SAAUC,GAAsC,IAArBC,EAAoB,uDAAJ,GAOrD,OANKA,IACHA,EAAgBD,GAGlBL,KAAKC,QAAQC,OAAOG,GAAmBC,EAEhCN,IACR,EAQDA,KAAKO,eAAiB,kBAAMC,EAAAA,EAAAA,YAAAA,KAA2BC,OAAOC,KAAK,EAAKT,QAAQC,QAA1D,EAOtBF,KAAKW,iBAAmB,kBAAMH,EAAAA,EAAAA,YAAAA,UAAgC,EAAKP,QAAQC,OAAQ,EAAKK,iBAAhE,EAMxBP,KAAKY,OAAS,kBAAMJ,EAAAA,EAAAA,YAAAA,MAA4B,EAAKP,QAAQE,IAAK,EAAKQ,mBAAzD,EAYdX,KAAKG,IAAM,SAAUU,GAEnB,OADAb,KAAKC,QAAQE,IAAMU,EACZb,IACR,EAQDA,KAAKc,MAAQ,WAAmC,IAAD,OAAxBC,EAAwB,uDAAnB,kBAwF1B,OArFAC,EAAAA,EAAAA,KACQD,GACLE,MAAK,SAACC,GAAS,IAAD,QAGPC,EAASH,EAAAA,EAAAA,KAAA,01BAkBKE,EAAIE,QAAQC,YAlBjB,QAkByB,mBAlBzB,6DAoBF,CACXC,KADW,WAKTH,EAAOI,MAAMC,QAAU,MAExB,EACDC,KARW,WAQH,IAIAC,EAAY3B,EAAU4B,aAEtBC,EAAgBF,EAAUG,QAAQC,WAElCC,EAAUL,EAAUG,QAAQG,QAAQ,YAEtCC,EAAOjB,EAAAA,EAAAA,YAAkBY,GAAiBZ,EAAAA,EAAAA,YAAkBG,GAEhEY,EAAQR,MAAMW,OAAd,UAA0BD,EAA1B,MAEAd,EAAOI,MAAMC,QAAU,OACxB,IAIHhB,EAAAA,EAAAA,YAAAA,KAEQU,EAAIE,QAAQjB,KACjBgC,SAAQ,SAACC,GAAD,OAAS,EAAKhC,KAAKgC,EAAnB,IAGX,EAAKjC,IAAIe,EAAIE,QAAQjB,KAGrBgB,EAAOkB,iBAAiB,SAAS,WAC/BvC,OAAOwC,KAAK,EAAK1B,SAAU,SAC5B,IA7DY,gBAgEPb,GAhEO,UAgEPA,EAAWwC,iBAhEJ,iBAgEP,EAAsBC,gBAhEf,aAgEP,EAAgCC,0BAhEzB,SA4EXtB,EAAOM,OAXP1B,EAAU2C,UAAUC,IAClB,0BACA,SAAUC,GACY,yBAAhBA,EAAMC,OACR1B,EAAOM,MAEV,IASLjB,EAAAA,EAAAA,YAAsBT,EAAU4B,aAAaE,QAAQC,WAAYX,EAClE,IAEInB,IACR,CACF,EAEDJ,EAAEkD,OAAS,WAAa,IAAD,IAEfC,EAASnD,EAAEoD,SAEjB,QAAsB,IAAXD,EACT,MAAM,IAAIE,UACR,uFANiB,aAUjBF,GAViB,UAUjBA,EAAQR,iBAVS,iBAUjB,EAAmBW,mBAVF,OAUjB,EAAgCC,sBAOpCvD,EAAEC,eAAkB,IAAIA,EAAekD,GAASjC,SALvCd,IAMV,C","sources":["webpack://padsquad_snippets/./src/PSBackToSurvey/PSBackToSurvey.js"],"sourcesContent":["/**\n * There are users that receive a preview link with the creative so they can see the placement\n * then do the test and must return back to the survey to continue with the marketing questions.\n *\n * The purpose of this plugin script is to render a button below the creative to let those users\n * that comes from a survey return back and continue with they survey.\n */\nimport { PSToolKit } from '../PSToolKit.js';\nimport { PSDom } from '../PSDom.js';\n\n((w) => {\n  /**\n   * Initialize the PSBackToSurvey script.\n   *\n   * @param {SimpliTag} SimpliTag The SimpliTag main object.\n   */\n  const PSBackToSurvey = function (SimpliTag) {\n    this.$config = {\n      params: {},\n      url: '',\n    };\n\n    /**\n     * This method takes a query string param from the window.top\n     * and use its value as future placeholder.\n     *\n     * @param {string} originalKeyName The name of the quey string param in the current window.top\n     * @param {string} targetKeyName The placeholder key name to hold the value.\n     * @returns {PSBackToSurvey}\n     */\n    this.take = function (originalKeyName, targetKeyName = '') {\n      if (!targetKeyName) {\n        targetKeyName = originalKeyName;\n      }\n\n      this.$config.params[originalKeyName] = targetKeyName;\n\n      return this;\n    };\n\n    /**\n     * Get the parameters taken from Query String\n     * that will be used in the final URL.\n     *\n     * @returns {Object<string, string>}\n     */\n    this.getParamsToUse = () => PSToolKit.queryString.only(Object.keys(this.$config.params));\n\n    /**\n     * Get the parameters to be set in the URL.\n     *\n     * @returns {Object<string, string>}\n     */\n    this.getParamsToBeSet = () => PSToolKit.placeholder.transform(this.$config.params, this.getParamsToUse());\n\n    /**\n     * Return the Final URL that will be opened.\n     * @returns {string}\n     */\n    this.getUrl = () => PSToolKit.placeholder.write(this.$config.url, this.getParamsToBeSet());\n\n    /**\n     * This method register a handler to open a new (_blank) window with the given URL\n     *\n     * NOTE:\n     * Please note the given URL could have placeholders in the form of {keyName}\n     * that could be used by the plugin and replaced with its final values at the end.\n     *\n     * @param {string} targetUrl The URL where to target when user click on the handler button.\n     * @returns {PSBackToSurvey}\n     */\n    this.url = function (targetUrl) {\n      this.$config.url = targetUrl;\n      return this;\n    };\n\n    /**\n     * Initialize the plugin in the browser.\n     *\n     * @param {string} id The ID of the script with the meta data.\n     * @returns {PSBackToSurvey}\n     */\n    this.start = function (id = '#PSBackToSurvey') {\n      console.log('PSBackToSurvey: START');\n\n      PSDom\n        .when(id)\n        .then((tag) => {\n          console.log('PSBackToSurvey: TAG READY');\n          // [STEP 1] Draw the button to be added\n          const button = PSDom.draw(`\n                        <button \n                            type=\"button\"\n                            style=\"\n                                display:none;\n                                width: 250px; \n                                height: 50px;\n                                margin: 40px 0 40px calc(50% - 125px); \n                                background-color: #5abf59; \n                                color: white;\n                                border: none;\n                                border-radius: 7px;\n                                font-size: 22px;\n                                font-weight: bold;\n                                font-family: sans-serif\n                                cursor: pointer;\n                                \"\n                        >\n                            ${tag.dataset.text ?? 'Return to Survey'}\n                        </button>\n                    `, {\n            hide() {\n\n              console.log('PSBackToSurvey: HIDE');\n\n              button.style.display = 'none';\n\n            },\n            show() {\n\n              console.log('PSBackToSurvey: DISPLAYED');\n\n              const placement = SimpliTag.vplacement();\n\n              const airInitHolder = placement.wrapper.firstChild\n\n              const adBreak = placement.wrapper.closest('.adBreak')\n\n              let unit = PSDom.outerHeight(airInitHolder) + PSDom.outerHeight(button)\n\n              adBreak.style.height = `${unit}px`\n\n              button.style.display = 'block';\n            },\n          });\n\n          // [STEP 2] Auto register placeholders\n          PSToolKit\n            .placeholder\n            .keys(tag.dataset.url)\n            .forEach((key) => this.take(key));\n\n          // [STEP 3] Auto register the target URL\n          this.url(tag.dataset.url);\n\n          // [STEP 4] Bind required events\n          button.addEventListener('click', () => {\n            window.open(this.getUrl(), '_blank');\n          });\n          // When at first load, if the creative is not visible, add a watcher event\n          // to know when the creative is visible and then show the button.\n          if (!(SimpliTag?.runtime()?.creative?.mainCreativeViewed ?? false)) {\n            SimpliTag.listeners.add(\n              'onStandardEventTracked',\n              function (event) {\n                if (event.label === 'main creative viewed') {\n                  button.show();\n                }\n              },\n            );\n          }\n          // If instead the creative is already visible, show the button ASAP.\n          else {\n            button.show();\n          }\n\n          // [STEP 5] - Draw in the wrapper\n          PSToolKit.insertAfter(SimpliTag.vplacement().wrapper.firstChild, button);\n        });\n\n      return this;\n    };\n  };\n\n  w.onload = function () {\n    /** @type {SimpliTag} */\n    const simpli = w.__simpli;\n\n    if (typeof simpli === 'undefined') {\n      throw new TypeError(\n        'PSBackToSurvey rely on Simpli Tag script. PLease include the required script first.',\n      );\n    }\n\n    if(!simpli?.runtime()?.environment?.isFriendlyIframe) {\n      console.warn('PSBackToSurvey is only available in friendly iframe.');\n      return this;\n    }\n\n    console.log('PSBackToSurvey: INIT');\n\n    w.PSBackToSurvey = (new PSBackToSurvey(simpli)).start();\n  };\n\n})(window);\n"],"names":["w","PSBackToSurvey","window","SimpliTag","this","$config","params","url","take","originalKeyName","targetKeyName","getParamsToUse","PSToolKit","Object","keys","getParamsToBeSet","getUrl","targetUrl","start","id","PSDom","then","tag","button","dataset","text","hide","style","display","show","placement","vplacement","airInitHolder","wrapper","firstChild","adBreak","closest","unit","height","forEach","key","addEventListener","open","runtime","creative","mainCreativeViewed","listeners","add","event","label","onload","simpli","__simpli","TypeError","environment","isFriendlyIframe"],"sourceRoot":""}